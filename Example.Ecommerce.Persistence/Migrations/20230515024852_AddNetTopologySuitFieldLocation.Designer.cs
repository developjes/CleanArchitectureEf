// <auto-generated />
using System;
using Example.Ecommerce.Persistence.Contexts.Mysql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace Example.Ecommerce.Persistence.Migrations
{
    [DbContext(typeof(MysqlApplicationDbContext))]
    [Migration("20230515024852_AddNetTopologySuitFieldLocation")]
    partial class AddNetTopologySuitFieldLocation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Parametrization.IdentificationTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(1)
                        .HasComment("Table Id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateAt")
                        .HasComment("Fecha de creacion del registro");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Description")
                        .HasColumnOrder(3)
                        .HasComment("Identification Type Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasColumnOrder(2)
                        .HasComment("Identification Type Name");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("IdentificationType", "northwindconnect");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Documento de identidad nacional",
                            Name = "Cedula de ciudadania"
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Documento de identidad nacional",
                            Name = "Tarjeta de identidad"
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Documento de identidad internacional",
                            Name = "Cedula de extrageria"
                        });
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Parametrization.StateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(1)
                        .HasComment("Table Id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateAt")
                        .HasComment("Fecha de creacion del registro");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Description")
                        .HasColumnOrder(3)
                        .HasComment("State Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name")
                        .HasColumnOrder(2)
                        .HasComment("State Name");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("State", "northwindconnect");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Inactivo",
                            Name = "Inactive"
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Activo",
                            Name = "Active"
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Activo2",
                            Name = "Active2"
                        });
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Petition.BeneficiaryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(1)
                        .HasComment("Table Id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateAt")
                        .HasComment("Fecha de creacion del registro");

                    b.Property<string>("FirstLastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("FirstLastName")
                        .HasColumnOrder(5)
                        .HasComment("Beneficiary First Last Name");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("FirstName")
                        .HasColumnOrder(3)
                        .HasComment("Beneficiary First Name");

                    b.Property<int>("HeadLineId")
                        .HasColumnType("int")
                        .HasColumnName("HeadLineIdId")
                        .HasColumnOrder(8)
                        .HasComment("ForeignKey HeadLine Table");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("IdentificationNumber")
                        .HasColumnOrder(2)
                        .HasComment("Head Line Identification Number");

                    b.Property<int>("IdentificationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("IdentificationTypeId")
                        .HasColumnOrder(7)
                        .HasComment("ForeignKey Identification Type Table");

                    b.Property<string>("SecondLastName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("SecondLastName")
                        .HasColumnOrder(6)
                        .HasComment("Beneficiary Second Last Name");

                    b.Property<string>("SecondName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("SecondName")
                        .HasColumnOrder(4)
                        .HasComment("Beneficiary Second Name");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("HeadLineId");

                    b.HasIndex("IdentificationTypeId");

                    b.ToTable("Beneficiary", "northwindconnect");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstLastName = "Vasquez",
                            FirstName = "Francy",
                            HeadLineId = 1,
                            IdentificationNumber = "31179933",
                            IdentificationTypeId = 1,
                            SecondLastName = "Rodriguez",
                            SecondName = "Eliana"
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstLastName = "Diaz",
                            FirstName = "Araceli",
                            HeadLineId = 2,
                            IdentificationNumber = "1063811659",
                            IdentificationTypeId = 1,
                            SecondLastName = "Manzano"
                        });
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Petition.HeadLineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(1)
                        .HasComment("Table Id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("Birthdate")
                        .HasColumnOrder(7)
                        .HasComment("Head Line Birthdate");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateAt")
                        .HasComment("Fecha de creacion del registro");

                    b.Property<string>("FirstLastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("FirstLastName")
                        .HasColumnOrder(5)
                        .HasComment("Head Line First Last Name");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("FirstName")
                        .HasColumnOrder(3)
                        .HasComment("Head Line First Name");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("IdentificationNumber")
                        .HasColumnOrder(2)
                        .HasComment("Head Line Identification Number");

                    b.Property<int>("IdentificationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("IdentificationTypeId")
                        .HasColumnOrder(8)
                        .HasComment("ForeignKey Identification Type Table");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("point")
                        .HasColumnName("Location")
                        .HasComment("Head Line Location");

                    b.Property<string>("SecondLastName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("SecondLastName")
                        .HasColumnOrder(6)
                        .HasComment("Head Line Second Last Name");

                    b.Property<string>("SecondName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("SecondName")
                        .HasColumnOrder(4)
                        .HasComment("Head Line Second Name");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdentificationTypeId");

                    b.ToTable("HeadLine", "northwindconnect");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1993, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstLastName = "Solarte",
                            FirstName = "Jhon",
                            IdentificationNumber = "1143953449",
                            IdentificationTypeId = 1,
                            Location = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (18.4839233 -69.9388777)"),
                            SecondLastName = "Vasquez",
                            SecondName = "Eddier"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1991, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstLastName = "Diaz",
                            FirstName = "Paola",
                            IdentificationNumber = "1063811659",
                            IdentificationTypeId = 3,
                            Location = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (18.4839233 -69.9388777)"),
                            SecondLastName = "Manzano",
                            SecondName = "Andrea"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1969, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstLastName = "Diaz",
                            FirstName = "Araceli",
                            IdentificationNumber = "1111111111",
                            IdentificationTypeId = 3,
                            Location = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (18.4839233 -69.9388777)")
                        });
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Petition.PetitionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(1)
                        .HasComment("Table Id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateAt")
                        .HasComment("Fecha de creacion del registro");

                    b.Property<ulong>("Expired")
                        .HasColumnType("bit")
                        .HasColumnName("Expired")
                        .HasColumnOrder(3)
                        .HasComment("Petition Expired");

                    b.Property<int>("HeadLineId")
                        .HasColumnType("int")
                        .HasColumnName("HeadLineId")
                        .HasColumnOrder(4)
                        .HasComment("ForeignKey HeadLine Table");

                    b.Property<string>("Radicate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Radicate")
                        .HasColumnOrder(2)
                        .HasComment("Petition Radicate");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<int>("_stateId")
                        .HasColumnType("int")
                        .HasColumnName("StateId")
                        .HasColumnOrder(5)
                        .HasComment("ForeignKey State Table");

                    b.HasKey("Id");

                    b.HasIndex("HeadLineId");

                    b.HasIndex("_stateId");

                    b.ToTable("Petition", "northwindconnect");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Expired = 0ul,
                            HeadLineId = 1,
                            Radicate = "202",
                            _stateId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Expired = 0ul,
                            HeadLineId = 2,
                            Radicate = "2355",
                            _stateId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Expired = 0ul,
                            HeadLineId = 2,
                            Radicate = "321",
                            _stateId = 1
                        });
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Petition.BeneficiaryEntity", b =>
                {
                    b.HasOne("Example.Ecommerce.Domain.Entities.Petition.HeadLineEntity", "HeadLine")
                        .WithMany("Beneficiaries")
                        .HasForeignKey("HeadLineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Example.Ecommerce.Domain.Entities.Parametrization.IdentificationTypeEntity", "IdentificationType")
                        .WithMany("Beneficiaries")
                        .HasForeignKey("IdentificationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HeadLine");

                    b.Navigation("IdentificationType");
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Petition.HeadLineEntity", b =>
                {
                    b.HasOne("Example.Ecommerce.Domain.Entities.Parametrization.IdentificationTypeEntity", "IdentificationType")
                        .WithMany("HeadLines")
                        .HasForeignKey("IdentificationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IdentificationType");
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Petition.PetitionEntity", b =>
                {
                    b.HasOne("Example.Ecommerce.Domain.Entities.Petition.HeadLineEntity", "HeadLine")
                        .WithMany("Petitions")
                        .HasForeignKey("HeadLineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Example.Ecommerce.Domain.Entities.Parametrization.StateEntity", "State")
                        .WithMany("Petitions")
                        .HasForeignKey("_stateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Petition_State_StateId");

                    b.Navigation("HeadLine");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Parametrization.IdentificationTypeEntity", b =>
                {
                    b.Navigation("Beneficiaries");

                    b.Navigation("HeadLines");
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Parametrization.StateEntity", b =>
                {
                    b.Navigation("Petitions");
                });

            modelBuilder.Entity("Example.Ecommerce.Domain.Entities.Petition.HeadLineEntity", b =>
                {
                    b.Navigation("Beneficiaries");

                    b.Navigation("Petitions");
                });
#pragma warning restore 612, 618
        }
    }
}
